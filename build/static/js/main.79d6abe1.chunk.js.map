{"version":3,"sources":["Components/Calculator/CalculatorButton/CalculatorButton.js","Components/Calculator/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["calculatorButton","prop","className","keyClass","onClick","ClickHandler","value","calculator","error","errorMessage","display","answer","allClearHandler","disabled","operatorHandler","bind","numericHandler","equelHandler","App","state","reviws","Name","Email","ProfilePicURL","Review","Rating","operator","result","AllClearHandler","setState","NumericHandler","number","undefined","displayText","toString","currentResult","getValue","values","val1","parseFloat","val2","calculateValue","split","Calculator","foo","this","funs","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.79d6abe1.chunk.js","sourcesContent":["import React from \"react\"\r\nconst calculatorButton = (prop) => {\r\n    return(\r\n    <div className={prop.keyClass} onClick={()=>prop.ClickHandler(prop.value)}>{prop.value}</div> \r\n    )\r\n}\r\nexport default calculatorButton","import React from 'react'\r\nimport Button from './CalculatorButton/CalculatorButton'\r\nconst calculator = (prop) => {\r\n    const getDisplay = () => {\r\n        if (prop.error) return (<p>{prop.errorMessage}</p>)\r\n        else return (\r\n            <div>\r\n                <p>{prop.display}</p>\r\n                <p>\r\n                    {prop.answer}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"calculator\">\r\n            <div className=\"display\" >\r\n                {getDisplay()}\r\n            </div>\r\n            <div className=\"keysrow\">\r\n                <Button keyClass={\"key\"} value={\"AC\"} ClickHandler={() => prop.allClearHandler()} />\r\n                <Button disabled={prop.error} keyClass={\"key\"} value={\"+/-\"} ClickHandler={prop.operatorHandler.bind(this)} />\r\n                <Button keyClass={\"key\"} value={\"%\"} ClickHandler={prop.operatorHandler.bind(this)} />\r\n                <Button keyClass={\"key\"} value={\"/\"} ClickHandler={prop.operatorHandler.bind(this)} />\r\n            </div>\r\n            <div className=\"keysrow\">\r\n                <Button keyClass={\"key\"} value={7} ClickHandler={prop.numericHandler.bind(this)} />\r\n                <Button keyClass={\"key\"} value={8} ClickHandler={prop.numericHandler.bind(this)} />\r\n                <Button keyClass={\"key\"} value={9} ClickHandler={prop.numericHandler.bind(this)} />\r\n                <Button keyClass={\"key\"} value={\"X\"} ClickHandler={prop.operatorHandler.bind(this)} />\r\n            </div>\r\n            <div className=\"keysrow\">\r\n                <Button keyClass={\"key\"} value={4} ClickHandler={prop.numericHandler.bind(this)} />\r\n                <Button keyClass={\"key\"} value={5} ClickHandler={prop.numericHandler.bind(this)} />\r\n                <Button keyClass={\"key\"} value={6} ClickHandler={prop.numericHandler.bind(this)} />\r\n                <Button keyClass={\"key\"} value={\"-\"} ClickHandler={prop.operatorHandler.bind(this)} />\r\n            </div>\r\n            <div className=\"keysrow\">\r\n                <Button keyClass={\"key\"} value={3} ClickHandler={prop.numericHandler.bind(this)} />\r\n                <Button keyClass={\"key\"} value={2} ClickHandler={prop.numericHandler.bind(this)} />\r\n                <Button keyClass={\"key\"} value={1} ClickHandler={prop.numericHandler.bind(this)} />\r\n                <Button keyClass={\"key\"} value={\"+\"} ClickHandler={prop.operatorHandler.bind(this)} />\r\n            </div>\r\n            <div className=\"keysrow\">\r\n                <Button keyClass={\"btnZero\"} value={0} ClickHandler={prop.numericHandler.bind(this)} />\r\n                <Button keyClass={\"key\"} value={\".\"} ClickHandler={prop.operatorHandler.bind(this)} />\r\n                <Button keyClass={\"key\"} value={\"=\"} ClickHandler={prop.equelHandler.bind(this)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default calculator","import React, { Component } from 'react';\nimport './App.css';\n// import ReviewUser from './Components/ReviewUser/ReviewUser'\n// import './Components/ReviewUser/ReviewUser.css'\nimport Calculator from './Components/Calculator/Calculator'\nimport './Components/Calculator/Calculator.css'\n\nclass App extends Component {\n  state = {\n    reviws: [\n      {\n        Name: \"Vinayak\",\n        Email: \"vinayak@koko.com\",\n        ProfilePicURL: \"https://i.pravatar.cc/150?img=7\",\n        Review: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        Rating: 3\n      },\n      {\n        Name: \"Porone\",\n        Email: \"Porone@moko.com\",\n        ProfilePicURL: \"https://i.pravatar.cc/150?img=5\",\n        Review: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\",\n        Rating: 3\n      },\n      {\n        Name: \"Blaka\",\n        Email: \"blaka@blaka.com\",\n        ProfilePicURL: \"https://i.pravatar.cc/150?img=3\",\n        Review: \"But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\",\n        Rating: 3\n      }\n    ],\n    display: \"\",\n    operator: \"\",\n    result: 0,\n    error: false,\n    errorMessage: \"\"\n  }\n  AllClearHandler = () => {\n    this.setState({\n      display: \"\",\n      result: 0,\n      operator: \"\",\n      error: false,\n      errorMessage: \"\"\n    });\n  }\n  NumericHandler = (number) => {\n    if (number !== undefined) {\n      let displayText = this.state.display;\n      displayText += number.toString();\n      this.setState({ display: displayText });\n    }\n  }\n  operatorHandler = (operator) => {\n    let displayText = this.state.display;\n    let currentResult = this.state.result;\n    if (this.state.operator !== \"\") {\n      displayText = currentResult;\n    }\n    displayText += operator;\n    if (operator !== undefined && operator !== \"\") {\n      this.setState({\n        operator: operator,\n        display: displayText\n      })\n    }\n  }\n  getValue = (values) => {\n    let result = 0;\n    let val1 = parseFloat(values[0]);\n    let val2 = parseFloat(values[1]);\n    switch (this.state.operator) {\n      case \"+\":\n        result = (val1 + val2);\n        break;\n      case \"-\":\n        result = (val1 - val2);\n        break;\n      case \"X\":\n        result = (val1 * val2);\n        break;\n      case \"/\":\n        if (val2 !== 0) {\n          result = (val1 / val2);\n        } else {\n          result = \"Cannot Divide by ZERO !!!\"\n        }\n        break;\n\n      default:\n        result = 0;\n        break;\n    }\n    return result;\n  }\n  calculateValue = () => {\n    let values = this.state.display.split(this.state.operator);\n    let result = this.getValue(values);\n    if (result === \"Cannot Divide by ZERO !!!\") {\n      this.setState({\n        result: 0,\n        error: true,\n        errorMessage: result\n      })\n    } else {\n      this.setState({\n        result: result,\n        error: false,\n        errorMessage: \"\"\n      })\n    }\n\n  }\n  // {this.state.reviws.map(\n  //   (review, i) => { return <ReviewUser key={i} user={review} /> }\n  // )}\n  render() {\n    return (\n      <div className=\"App\">\n        <Calculator\n          foo={this.funs}\n          display={this.state.display}\n          answer={this.state.result}\n          error={this.state.error}\n          errorMessage={this.state.errorMessage}\n          allClearHandler={this.AllClearHandler}\n          numericHandler={this.NumericHandler}\n          operatorHandler={this.operatorHandler}\n          equelHandler={this.calculateValue} />\n      </div>\n    )\n  }\n\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}